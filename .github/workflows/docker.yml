name: Docker Build

on:
  push:
    tags:
      - '*'

env:
  YARN_CACHE_FOLDER: ~/.yarn

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Lint
        run: yarn lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Build jobs (node)
      - name: Create VERSION tag
        run: |
          export VERSION="$(date +%d.%m.%Y-%H:%M)-${GITHUB_SHA::8}"
          echo "::set-env name=VERSION::$VERSION"
          echo "::set-env name=VUE_APP_VERSION::$VERSION"
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Build
        run: yarn build
        env:
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # TODO: remove .map files from dist
      # Docker jobs
      - name: Login to DockerHub Registry
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build the Docker image
        run: docker build --file docker/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/obelix:latest --build-arg VERSION="$VERSION" --cache-from ${{ secrets.DOCKERHUB_USERNAME }}/obelix:latest .
      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/obelix
