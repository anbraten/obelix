name: Release Backend

on:
  push:
    tags:
      - 'backend-*'
    paths:
      - '.github/workflows/release-backend.yml'
      - 'packages/backend/**'
      - '.gitignore'
      - 'package.json'
      - 'yarn.lock'

env:
  YARN_CACHE_FOLDER: ~/.yarn

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Cache .pnpm-store
        uses: actions/cache@v1
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm run lint

  build-backend:
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Login to DockerHub Registry
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build the Docker image
        run: docker build --file docker/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/obelix:latest --build-arg VERSION="$(date +%d.%m.%Y-%H:%M)-${GITHUB_SHA::8}" --cache-from ${{ secrets.DOCKERHUB_USERNAME }}/obelix:latest .
      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/obelix
