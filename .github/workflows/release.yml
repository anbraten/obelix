name: Release

on:
  push:
    tags:
      - 'v*'

env:
  YARN_CACHE_FOLDER: ~/.yarn

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn --frozen-lockfile
      - run: yarn lint

  build-docker:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Login to DockerHub Registry
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build the Docker image
        run: docker build --file docker/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/obelix:latest --build-arg VERSION="$(date +%d.%m.%Y-%H:%M)-${GITHUB_SHA::8}" --cache-from ${{ secrets.DOCKERHUB_USERNAME }}/obelix:latest .
      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/obelix

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install and Build üîß
        run: |
          yarn --frozen-lockfile
          yarn generate:config
          yarn build
        env:
          APP_TITLE: Obelix
          APP_OIDC_URL: ${{ secrets.APP_OIDC_URL }}
          APP_OIDC_CLIENT_ID: ${{ secrets.APP_OIDC_CLIENT_ID }}
          APP_MATOMO_URL: ${{ secrets.APP_MATOMO_URL }}
          APP_MATOMO_SITE: ${{ secrets.APP_MATOMO_SITE }}
          APP_BACKEND_URL: ${{ secrets.APP_BACKEND_URL }}
          APP_SENTRY_DSN: ${{ secrets.APP_SENTRY_DSN }}
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          # SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }} # disable sentry token

      - name: Install SSH Client üîë
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          SSH: true
          BRANCH: deployment
          FOLDER: packages/app/dist
          CLEAN: true # Automatically remove deleted files from the deploy branch